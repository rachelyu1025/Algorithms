//[PGS] 자릿수 더하기, +1
// 소요시간: 13분 + (중간에 멈췄다가 다시 풀었는데 타이머 못킴..)

// 테스트 1 〉	통과 (0.05ms, 30.2MB)
// 테스트 2 〉	통과 (0.04ms, 30.1MB)
// 테스트 3 〉	통과 (0.05ms, 30.2MB)
// 테스트 4 〉	통과 (0.05ms, 30.2MB)
// 테스트 5 〉	통과 (0.05ms, 30.3MB)
// 테스트 6 〉	통과 (0.05ms, 30.2MB)
// 테스트 7 〉	통과 (0.06ms, 30.1MB)
// 테스트 8 〉	통과 (0.08ms, 30.2MB)
// 테스트 9 〉	통과 (0.05ms, 30.1MB)
// 테스트 10 〉	통과 (0.05ms, 30.1MB)
// 테스트 11 〉	통과 (0.09ms, 30.1MB)
// 테스트 12 〉	통과 (0.06ms, 30.1MB)
// 테스트 13 〉	통과 (0.05ms, 30.1MB)
// 테스트 14 〉	통과 (0.05ms, 30.1MB)
// 테스트 15 〉	통과 (0.05ms, 30.2MB)
// 테스트 16 〉	통과 (0.05ms, 30.1MB)
// 테스트 17 〉	통과 (0.05ms, 30MB)
// 테스트 18 〉	통과 (0.05ms, 30.2MB)
// 테스트 19 〉	통과 (0.05ms, 30.1MB)
// 테스트 20 〉	통과 (0.05ms, 30.2MB)
// 테스트 21 〉	통과 (0.05ms, 30.1MB)

// 수를 이용해 풀어보려 %,/연산자 이용했으나 테스트 하나로 실패 
// 문자열과 reduce 메서드를 이용하여 통과
// 왜 첫번째 시도가 틀렸나? -> while의 조건을 n > 10으로 해두어,
// n = 10인 경우 10이 그대로 나오게 됨! (해결)
function solution(n){
  //     let result = 0;
  
  //     while(n >= 10){ // n > 0로 설정하니 통과 왜..? -> 10때문!(바보같은 실수^^)
  //         result += n%10;
  //         n = Math.floor(n/10);
  //     }
      
  //     return result+n;
      return (n + "").split('').reduce((acc,curr) => acc + (+curr),0)
  }