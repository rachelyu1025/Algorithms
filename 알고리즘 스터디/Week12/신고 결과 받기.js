// [PGS] 신고 결과 받기, +5
// 소요시간 : ㅇ<-<...(말모)

// 요령없이 푼 것 같아 아쉬움
// 테스트 1 〉	통과 (0.21ms, 33.4MB)
// 테스트 2 〉	통과 (0.27ms, 33.4MB)
// 테스트 3 〉	통과 (6052.12ms, 97.8MB)
// 테스트 4 〉	통과 (0.31ms, 33.5MB)
// 테스트 5 〉	통과 (0.32ms, 33.6MB)
// 테스트 6 〉	통과 (4.72ms, 37.2MB)
// 테스트 7 〉	통과 (10.88ms, 37.7MB)
// 테스트 8 〉	통과 (23.05ms, 38.5MB)
// 테스트 9 〉	통과 (1518.79ms, 62.8MB)
// 테스트 10 〉	통과 (728.11ms, 68.8MB)
// 테스트 11 〉	통과 (4050.60ms, 98.3MB)
// 테스트 12 〉	통과 (3.92ms, 36.9MB)
// 테스트 13 〉	통과 (2.97ms, 36.7MB)
// 테스트 14 〉	통과 (2856.98ms, 64.1MB)
// 테스트 15 〉	통과 (2948.42ms, 84.7MB)
// 테스트 16 〉	통과 (1.11ms, 33.5MB)
// 테스트 17 〉	통과 (2.31ms, 36.7MB)
// 테스트 18 〉	통과 (4.80ms, 36.9MB)
// 테스트 19 〉	통과 (7.37ms, 37MB)
// 테스트 20 〉	통과 (2432.24ms, 64.2MB)
// 테스트 21 〉	통과 (5363.21ms, 86.8MB)
// 테스트 22 〉	통과 (0.12ms, 33.6MB)
// 테스트 23 〉	통과 (0.12ms, 33.5MB)
// 테스트 24 〉	통과 (0.11ms, 33.6MB)

function solution(id_list, report, k) {
  let result = new Array(id_list.length).fill(0); // 결과를 담을 배열
  let voteLi = report.map(el => el.split(' ')); // 이중배열로 report 정리한 배열 
  
  id_list.map(el => { // 유저 하나씩 돌면서 신고받은 상황을 살펴보자
      let count = 0; // 신고받은 횟수 추가할 count 변수
      let reporter = []; // 중복 신고자를 제외하기 위한 신고자를 담아둘 변수 
      
      voteLi.forEach(item => { // 투표 현황이 담긴 배열을 돌며 비교분석 시작
          if(el === item[1] && !reporter.includes(item[0])) { // 살펴볼 유저(el)와 신고된 유저(item[1])가 같으면서 item[0]이 중복 신고자가 아니라면
              reporter.push(item[0]); // reporter배열에 신고자 등록 
              count++; // 신고받은 횟수 1 증감시켜줌
          }
      })
      
      if(count >= k){ // 살펴본 유저가 신고된 횟수가 정지 기준에 해당된다면 
              let reporter = []; // 중복 신고자 제외를 위한 배열 
          
          voteLi.forEach(item => { // 다시 이중배열을 살핀다
              if(el === item[1] && !reporter.includes(item[0])) { // 정지 기준에 해당된 유저(el)와 신고된 유저(item[1])가 같으면서 item[0]이 중복 신고자가 아니라면
                  reporter.push(item[0]); // 신고자 등록
                  result[id_list.indexOf(item[0])] ++; // 결과를 담을 배열에 신고한 유저 인덱스를 찾아 받을 메일 수를 1 추가시켜준다.
              }
          })
      }
      
  })

  
  return result; // 최종적으로 정지된 유저를 투표한 유저가 받을 메일 수를 담은 결과 배열 리턴! 
}