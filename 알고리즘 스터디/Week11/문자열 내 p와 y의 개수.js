// [PGS] 문자열 내 p와 y의 개수, +2
// 소요시간 7.37분

// 테스트 1 〉	통과 (0.06ms, 33.5MB)
// 테스트 2 〉	통과 (0.05ms, 33.4MB)
// 테스트 3 〉	통과 (0.05ms, 33.4MB)
// 테스트 4 〉	통과 (0.05ms, 33.4MB)
// 테스트 5 〉	통과 (0.05ms, 33.6MB)
// 테스트 6 〉	통과 (0.14ms, 33.5MB)
// 테스트 7 〉	통과 (0.15ms, 33.6MB)
// 테스트 8 〉	통과 (0.14ms, 33.5MB)
// 테스트 9 〉	통과 (0.14ms, 33MB)
// 테스트 10 〉	통과 (0.14ms, 33.4MB)
// 테스트 11 〉	통과 (0.14ms, 33.4MB)
// 테스트 12 〉	통과 (0.14ms, 33.1MB)
// 테스트 13 〉	통과 (0.22ms, 33.4MB)
// 테스트 14 〉	통과 (0.14ms, 33.4MB)
// 테스트 15 〉	통과 (0.14ms, 33.5MB)
// 테스트 16 〉	통과 (0.14ms, 33.6MB)
// 테스트 17 〉	통과 (0.14ms, 33.4MB)
// 테스트 18 〉	통과 (0.15ms, 33.4MB)
// 테스트 19 〉	통과 (0.15ms, 33.4MB)
// 테스트 20 〉	통과 (0.25ms, 33.5MB)
// 테스트 21 〉	통과 (0.14ms, 33.4MB)
// 테스트 22 〉	통과 (0.14ms, 33.6MB)
// 테스트 23 〉	통과 (0.20ms, 33.4MB)
// 테스트 24 〉	통과 (0.15ms, 33.4MB)
// 테스트 25 〉	통과 (0.14ms, 33.5MB)
// 테스트 26 〉	통과 (0.14ms, 33.4MB)
// 테스트 27 〉	통과 (0.14ms, 33.6MB)
// 테스트 28 〉	통과 (0.14ms, 33.5MB)
// 테스트 29 〉	통과 (0.05ms, 33.4MB)
// 테스트 30 〉	통과 (0.14ms, 33.4MB)

// 문자열을 toLowerCase 메서드 이용하여 소문자로 통일시키기 
// 요소 하나하나 돌면서 p,y일 경우 각 변수에 증감시킴으로써 개수 저장
// p와 y의 개수가 같은지 여부 삼항연산자 이용하여 리턴 

function solution(s){
  s = s.toLowerCase();
  
  let p = 0;
  let y = 0;

  for(i of s){
      if(i === 'p') p++;
      else if(i === 'y') y++;
  }
  
  return p === y ? true : false;
}