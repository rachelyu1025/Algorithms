// [PGS] 문자열 내림차순으로 배치하기, +4
// 소요시간 15.44분

// 테스트 1 〉	통과 (0.22ms, 33.6MB)
// 테스트 2 〉	통과 (0.22ms, 33.5MB)
// 테스트 3 〉	통과 (0.15ms, 33.6MB)
// 테스트 4 〉	통과 (0.20ms, 33.5MB)
// 테스트 5 〉	통과 (0.31ms, 33.7MB)
// 테스트 6 〉	통과 (0.35ms, 33.5MB)
// 테스트 7 〉	통과 (0.16ms, 33.5MB)
// 테스트 8 〉	통과 (0.26ms, 33.5MB)
// 테스트 9 〉	통과 (0.18ms, 33.5MB)
// 테스트 10 〉	통과 (0.17ms, 33.5MB)
// 테스트 11 〉	통과 (0.15ms, 33.5MB)
// 테스트 12 〉	통과 (0.16ms, 33.5MB)
// 테스트 13 〉	통과 (0.26ms, 33.4MB)
// 테스트 14 〉	통과 (0.14ms, 33.6MB)
// 테스트 15 〉	통과 (0.13ms, 33.5MB)
// 테스트 16 〉	통과 (0.14ms, 33.5MB)

// 대문자 < 소문자
// 아스키코드로 비교 진행하자
// 문자열을 split을 이용하여 배열로 각 요소를 나누어 담음
// map메서드 이용, CharCodeAt 메서드 이용하여 각 요소마다 아스키코드로 변환
// 변환된 수에 따라 내림차순으로 정렬 후 fromCharCode메서드 이용하여 문자형태로 다시 변환
// join메서드 이용하여 배열을 문자열로 변환하여 리턴해주기 

function solution(s) {
  let arr = s.split('').map(el => el.charCodeAt()).sort((a,b) => b - a);
  return arr.map(el => String.fromCharCode(el)).join('');
}