// [PGS] 수박수박수박수박수박수? , +1

// 테스트 1 〉	통과 (0.03ms, 33.6MB)
// 테스트 2 〉	통과 (0.03ms, 33.5MB)
// 테스트 3 〉	통과 (0.03ms, 33.4MB)
// 테스트 4 〉	통과 (0.03ms, 33.5MB)
// 테스트 5 〉	통과 (0.03ms, 33.5MB)
// 테스트 6 〉	통과 (0.03ms, 33.4MB)
// 테스트 7 〉	통과 (0.03ms, 33.4MB)
// 테스트 8 〉	통과 (0.03ms, 33.4MB)
// 테스트 9 〉	통과 (0.03ms, 33.5MB)
// 테스트 10 〉	통과 (0.05ms, 33.4MB)
// 테스트 11 〉	통과 (0.04ms, 33.4MB)
// 테스트 12 〉	통과 (0.03ms, 33.4MB)
// 테스트 13 〉	통과 (0.03ms, 33.5MB)
// 테스트 14 〉	통과 (0.03ms, 33.4MB)
// 테스트 15 〉	통과 (0.03ms, 33.5MB)
// 테스트 16 〉	통과 (0.03ms, 33.5MB)

// '수박' 이라는 문자열을 담을 변수 생성
// 홀짝에 따라 짝수라면 2로 나눈 몫만큼 '수박'을 반복
// 홀수라면 2로 나눈 몫에 '수' 한글자를 더한다.
function solution(n) { 
  let word = '수박';
  
  return n % 2 === 0 ? word.repeat(n / 2) : word.repeat(n / 2) + word[0];
}